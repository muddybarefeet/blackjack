// Generated by CoffeeScript 1.10.0
var assert, expect;

assert = chai.assert;

expect = chai.expect;

describe('deck', function() {
  var deck, hand;
  deck = null;
  hand = null;
  beforeEach(function() {
    var dealer;
    deck = new Deck();
    hand = deck.dealPlayer();
    dealer = deck.dealDealer();
  });
  describe('hit', function() {
    it('should give the last card from the deck', function() {
      assert.strictEqual(deck.length, 50);
      assert.strictEqual(deck.last(), hand.hit());
      return assert.strictEqual(deck.length, 49);
    });
    it('should check if the instance is a dealer', function() {

      /*make a dealer instance and check that its a dealer */
      return expect(dealer.isDealer).to.be.true;
    });
    it('should check if the dealer > 17 and player < dealer then dealer wins', function() {
      dealer.minScore() = 19;
      dealer.playerscore = 15;
      return expect(dealer.hit()).to.equal("You Loose!");
    });
    return it('should always finish with a dealers score > 17', function() {
      return expect(dealer.hit()).to.be >17;
    });
  });
  return describe('stand', function() {
    it('should have a stand method', function() {

      /*invoke the stand method on hand and see if it is defined */
      return expext(hand.stand()).to.be.DEFINED;
    });
    return it('should update the player score when invoked', function() {

      /*get the player score and then call the stand method and then call player.playerscore */
      return prevScore = expect(hand.playerscore)
       hand.hit()
      expect(prevScore.to.not.equal(hand.playerscore);
    });
  });
});
